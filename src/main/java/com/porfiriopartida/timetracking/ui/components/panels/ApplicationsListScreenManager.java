package com.porfiriopartida.timetracking.ui.components.panels;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.porfiriopartida.awt.layout.VerticalLayout;
import com.porfiriopartida.timetracking.app.Constants;
import com.porfiriopartida.timetracking.screen.WindowScreen;
import com.porfiriopartida.timetracking.screen.WindowTimeTracker;
import com.porfiriopartida.timetracking.ui.components.frame.ApplicationFrame;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Component;

import javax.swing.*;
import java.awt.*;
import java.util.Random;


@Qualifier(Constants.Beans.APPLICATIONS)
@Component
public class ApplicationsListScreenManager implements IScreenManager {
    private GridBagConstraints rowGbc;
    private Random rnd;
    @Autowired
    private ApplicationFrame frame;
    private JScrollPane applicationsScrollPanel;
    private JPanel applicationsListPanel;
    private JPanel contentPane;
    @Autowired
    private WindowTimeTracker windowTimeTracker;

    public ApplicationsListScreenManager() {
        rnd = new Random();
        buildGbc();
        applicationsListPanel.setLayout(new VerticalLayout(5, VerticalLayout.LEFT));

        //For debug purposes v
//        button1.setVisible(false);
//        button1.addActionListener(new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                addNewApplicationRow("Test", rnd.nextInt(100));
//                frame.refreshFrame();
//            }
//        });
    }

    private void buildGbc() {
        rowGbc = new GridBagConstraints();
        rowGbc.gridx = 0;
        rowGbc.gridy = 0;
        rowGbc.anchor = GridBagConstraints.NORTH;
        rowGbc.weighty = 1;
    }

    private ApplicationRow buildNewRow(WindowScreen screen, long appProgress) {
        ApplicationRow applicationRow = new ApplicationRow();
        applicationRow.setAppName(screen.getCommand());
        applicationRow.getAppProgress().setValue(0);
        applicationRow.setTimeValue(appProgress);
        applicationRow.setWindowScreen(screen);

        applicationRow.setVisible(windowTimeTracker.isTrackingCommandFound() ? screen.isCommandFound() : true);
        return applicationRow;
    }


    public ApplicationRow addNewApplicationRow(WindowScreen windowScreen, long appProgress) {
        ApplicationRow newRow = buildNewRow(windowScreen, appProgress);
//        newRow.setWindowScreen(windowScreen);
        applicationsListPanel.add(newRow);
        Dimension dimension = applicationsScrollPanel.getParent().getSize();
        dimension.height -= 50;
        applicationsScrollPanel.setPreferredSize(dimension);
        return newRow;
    }

    public JPanel getApplicationsListPanel() {
        return applicationsListPanel;
    }

    public void setApplicationsListPanel(JPanel applicationsListPanel) {
        this.applicationsListPanel = applicationsListPanel;
    }

    public JScrollPane getApplicationsScrollPanel() {
        return applicationsScrollPanel;
    }

    public void setApplicationsScrollPanel(JScrollPane applicationsScrollPanel) {
        this.applicationsScrollPanel = applicationsScrollPanel;
    }

    @Override
    public JPanel getContentPane() {
        return contentPane;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /** Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        contentPane = new JPanel();
        contentPane.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        applicationsScrollPanel = new JScrollPane();
        contentPane.add(applicationsScrollPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        applicationsListPanel = new JPanel();
        applicationsListPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        applicationsScrollPanel.setViewportView(applicationsListPanel);
    }

    /** @noinspection ALL */
    public JComponent $$$getRootComponent$$$() {
        return contentPane;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
